swagger: '2.0'
info:
  title: Multi-Service API Documentation
  version: 1.0.0
  description: >
    Bienvenido a la documentación de la API Multi-Service. Esta API incluye varios microservicios que gestionan diferentes aspectos de nuestra plataforma, incluyendo usuarios, perfiles, contenido, suscripciones e interacciones. Cada servicio está diseñado para proporcionar operaciones CRUD completas para los recursos gestionados. Aquí encontrarás todos los detalles necesarios para integrar y utilizar estos servicios.

host: 'localhost:8000'
basePath: '/api/v1'
schemes:
  - http

paths:
  /content:
    get:
      summary: Retrieve all content
      description: Obtén una lista de todos los elementos de contenido disponibles en la plataforma. Este endpoint permite recuperar todos los contenidos almacenados.
      tags:
        - Content
      responses:
        200:
          description: Una lista de todos los elementos de contenido
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Content'
              example:
                - id: 1
                  title: "Contenido de ejemplo"
                  description: "Descripción del contenido de ejemplo"
                  release_date: "2024-05-19T12:00:00Z"
                  type: "video"
                  url_content: "http://example.com/content/1"
                  url_cover: "http://example.com/cover/1"
    post:
      summary: Create a new content item
      description: Crea un nuevo elemento de contenido proporcionando los detalles necesarios en el cuerpo de la solicitud.
      tags:
        - Content
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Content'
      responses:
        201:
          description: Contenido creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Content'
              example:
                id: 1
                title: "Nuevo contenido"
                description: "Descripción del nuevo contenido"
                release_date: "2024-05-19T12:00:00Z"
                type: "video"
                url_content: "http://example.com/content/1"
                url_cover: "http://example.com/cover/1"

  /content/{id}:
    get:
      summary: Retrieve content by ID
      description: Obtén los detalles de un elemento de contenido específico usando su ID único.
      tags:
        - Content
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: El ID del contenido a recuperar
      responses:
        200:
          description: Detalles del contenido recuperado
          content:
            application/json:
              schema:
                $ref: '#/definitions/Content'
              example:
                id: 1
                title: "Contenido de ejemplo"
                description: "Descripción del contenido de ejemplo"
                release_date: "2024-05-19T12:00:00Z"
                type: "video"
                url_content: "http://example.com/content/1"
                url_cover: "http://example.com/cover/1"
        404:
          description: Contenido no encontrado
    put:
      summary: Update a content item
      description: Actualiza los detalles de un elemento de contenido existente usando su ID único.
      tags:
        - Content
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: El ID del contenido a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Content'
      responses:
        200:
          description: Contenido actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Content'
              example:
                id: 1
                title: "Contenido actualizado"
                description: "Descripción actualizada del contenido"
                release_date: "2024-05-19T12:00:00Z"
                type: "video"
                url_content: "http://example.com/content/1"
                url_cover: "http://example.com/cover/1"
    delete:
      summary: Delete a content item
      description: Elimina un elemento de contenido existente usando su ID único.
      tags:
        - Content
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: El ID del contenido a eliminar
      responses:
        204:
          description: Contenido eliminado exitosamente

  /users:
    get:
      summary: Retrieve all users
      description: Obtén una lista de todos los usuarios registrados en la plataforma.
      tags:
        - User
      responses:
        200:
          description: Una lista de todos los usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/User'
              example:
                - id: 1
                  username: "usuario1"
                  email: "usuario1@example.com"
                  created_at: "2024-05-19T12:00:00Z"
    post:
      summary: Create a new user
      description: Crea un nuevo usuario proporcionando los detalles necesarios en el cuerpo de la solicitud.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/User'
      responses:
        201:
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/User'
              example:
                id: 1
                username: "usuario1"
                email: "usuario1@example.com"
                created_at: "2024-05-19T12:00:00Z"

  /users/{email}:
    get:
      summary: Retrieve user by email
      description: Obtén los detalles de un usuario específico usando su correo electrónico único.
      tags:
        - User
      parameters:
        - in: path
          name: email
          schema:
            type: string
          required: true
          description: El correo electrónico del usuario a recuperar
      responses:
        200:
          description: Detalles del usuario recuperado
          content:
            application/json:
              schema:
                $ref: '#/definitions/User'
              example:
                id: 1
                username: "usuario1"
                email: "usuario1@example.com"
                created_at: "2024-05-19T12:00:00Z"
        404:
          description: Usuario no encontrado
    put:
      summary: Update a user
      description: Actualiza los detalles de un usuario existente usando su correo electrónico único.
      tags:
        - User
      parameters:
        - in: path
          name: email
          schema:
            type: string
          required: true
          description: El correo electrónico del usuario a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/User'
      responses:
        200:
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/User'
              example:
                id: 1
                username: "usuario1"
                email: "usuario1@example.com"
                created_at: "2024-05-19T12:00:00Z"
    delete:
      summary: Delete a user
      description: Elimina un usuario existente usando su correo electrónico único.
      tags:
        - User
      parameters:
        - in: path
          name: email
          schema:
            type: string
          required: true
          description: El correo electrónico del usuario a eliminar
      responses:
        204:
          description: Usuario eliminado exitosamente

  /subscriptions:
    get:
      summary: Retrieve all subscriptions
      description: Obtén una lista de todas las suscripciones registradas en la plataforma.
      tags:
        - Subscription
      responses:
        200:
          description: Una lista de todas las suscripciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Subscription'
              example:
                - id: 1
                  subscriber_id: 1
                  subscribed_to_id: 2
                  start_date: "2024-05-19T12:00:00Z"
                  end_date: "2025-05-19T12:00:00Z"
                  status: "active"
    post:
      summary: Create a new subscription
      description: Crea una nueva suscripción proporcionando los detalles necesarios en el cuerpo de la solicitud.
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Subscription'
      responses:
        201:
          description: Suscripción creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Subscription'
              example:
                id: 1
                subscriber_id: 1
                subscribed_to_id: 2
                start_date: "2024-05-19T12:00:00Z"
                end_date: "2025-05-19T12:00:00Z"
                status: "active"

  /subscriptions/{id}:
    get:
      summary: Retrieve subscription by ID
      description: Obtén los detalles de una suscripción específica usando su ID único.
      tags:
        - Subscription
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: El ID de la suscripción a recuperar
      responses:
        200:
          description: Detalles de la suscripción recuperada
          content:
            application/json:
              schema:
                $ref: '#/definitions/Subscription'
              example:
                id: 1
                subscriber_id: 1
                subscribed_to_id: 2
                start_date: "2024-05-19T12:00:00Z"
                end_date: "2025-05-19T12:00:00Z"
                status: "active"
        404:
          description: Suscripción no encontrada
    put:
      summary: Update a subscription
      description: Actualiza los detalles de una suscripción existente usando su ID único.
      tags:
        - Subscription
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: El ID de la suscripción a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Subscription'
      responses:
        200:
          description: Suscripción actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Subscription'
              example:
                id: 1
                subscriber_id: 1
                subscribed_to_id: 2
                start_date: "2024-05-19T12:00:00Z"
                end_date: "2025-05-19T12:00:00Z"
                status: "active"
    delete:
      summary: Delete a subscription
      description: Elimina una suscripción existente usando su ID único.
      tags:
        - Subscription
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: El ID de la suscripción a eliminar
      responses:
        204:
          description: Suscripción eliminada exitosamente

  /interactions:
    get:
      summary: Retrieve all interactions
      description: Obtén una lista de todas las interacciones registradas en la plataforma.
      tags:
        - Interaction
      responses:
        200:
          description: Una lista de todas las interacciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Interaction'
              example:
                - id: 1
                  user_id: 1
                  content_id: 1
                  type: "view"
                  timestamp: "2024-05-19T12:00:00Z"
    post:
      summary: Log a new interaction
      description: Registra una nueva interacción proporcionando los detalles necesarios en el cuerpo de la solicitud.
      tags:
        - Interaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Interaction'
      responses:
        201:
          description: Interacción registrada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Interaction'
              example:
                id: 1
                user_id: 1
                content_id: 1
                type: "view"
                timestamp: "2024-05-19T12:00:00Z"

  /interactions/{id}:
    get:
      summary: Retrieve interaction by ID
      description: Obtén los detalles de una interacción específica usando su ID único.
      tags:
        - Interaction
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: El ID de la interacción a recuperar
      responses:
        200:
          description: Detalles de la interacción recuperada
          content:
            application/json:
              schema:
                $ref: '#/definitions/Interaction'
              example:
                id: 1
                user_id: 1
                content_id: 1
                type: "view"
                timestamp: "2024-05-19T12:00:00Z"
        404:
          description: Interacción no encontrada
    delete:
      summary: Delete an interaction
      description: Elimina una interacción existente usando su ID único.
      tags:
        - Interaction
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: El ID de la interacción a eliminar
      responses:
        204:
          description: Interacción eliminada exitosamente

  /profiles:
    get:
      summary: Retrieve all profiles
      description: Obtén una lista de todos los perfiles registrados en la plataforma.
      tags:
        - Profile
      responses:
        200:
          description: Una lista de todos los perfiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Profile'
              example:
                - id: 1
                  user_id: 1
                  biography: "Biografía de ejemplo"
                  interests: ["películas", "música"]
                  experience: "Experiencia de ejemplo"
                  education: "Educación de ejemplo"
    post:
      summary: Create a new profile
      description: Crea un nuevo perfil proporcionando los detalles necesarios en el cuerpo de la solicitud.
      tags:
        - Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Profile'
      responses:
        201:
          description: Perfil creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Profile'
              example:
                id: 1
                user_id: 1
                biography: "Biografía de ejemplo"
                interests: ["películas", "música"]
                experience: "Experiencia de ejemplo"
                education: "Educación de ejemplo"

  /profiles/{id}:
    get:
      summary: Retrieve profile by ID
      description: Obtén los detalles de un perfil específico usando su ID único.
      tags:
        - Profile
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: El ID del perfil a recuperar
      responses:
        200:
          description: Detalles del perfil recuperado
          content:
            application/json:
              schema:
                $ref: '#/definitions/Profile'
              example:
                id: 1
                user_id: 1
                biography: "Biografía de ejemplo"
                interests: ["películas", "música"]
                experience: "Experiencia de ejemplo"
                education: "Educación de ejemplo"
        404:
          description: Perfil no encontrado
    put:
      summary: Update a profile
      description: Actualiza los detalles de un perfil existente usando su ID único.
      tags:
        - Profile
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: El ID del perfil a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Profile'
      responses:
        200:
          description: Perfil actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/definitions/Profile'
              example:
                id: 1
                user_id: 1
                biography: "Biografía de ejemplo"
                interests: ["películas", "música"]
                experience: "Experiencia de ejemplo"
                education: "Educación de ejemplo"
    delete:
      summary: Delete a profile
      description: Elimina un perfil existente usando su ID único.
      tags:
        - Profile
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: El ID del perfil a eliminar
      responses:
        204:
          description: Perfil eliminado exitosamente

definitions:
  Content:
    type: object
    required:
      - title
      - type
    properties:
      id:
        type: integer
      title:
        type: string
      description:
        type: string
      release_date:
        type: string
        format: date-time
      type:
        type: string
      url_content:
        type: string
      url_cover:
        type: string

  User:
    type: object
    required:
      - username
      - email
    properties:
      id:
        type: integer
      username:
        type: string
      email:
        type: string
      password:
        type: string
      created_at:
        type: string
        format: date-time

  Subscription:
    type: object
    required:
      - subscriber_id
      - subscribed_to_id
    properties:
      id:
        type: integer
      subscriber_id:
        type: integer
      subscribed_to_id:
        type: integer
      start_date:
        type: string
        format: date-time
      end_date:
        type: string
        format: date-time
      status:
        type: string

  Interaction:
    type: object
    required:
      - user_id
      - content_id
    properties:
      id:
        type: integer
      user_id:
        type: integer
      content_id:
        type: integer
      type:
        type: string
      timestamp:
        type: string
        format: date-time

  Profile:
    type: object
    required:
      - user_id
      - biography
    properties:
      id:
        type: integer
      user_id:
        type: integer
      biography:
        type: string
      interests:
        type: array
        items:
          type: string
      experience:
        type: string
      education:
        type: string
